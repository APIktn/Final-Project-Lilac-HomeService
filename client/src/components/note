cartsRouter.get("/:category_id", async (req, res) => {
    const  categoryId = req.params.category_id; // Fixing this line
    let result;
    try {
      result = await supabase
        .from("categories")
        .select("category_name, created_at, updated_at")
        .eq("category_id", categoryId )
       .single();
      } catch {
        return res.status(500).json({
          message: "Error fetching category"
        });
      }

      if (!result.data || result.data.length === 0) {
        return res.status(404).json({
          "Not Found": "Not Found"
        });
      }

      return res.status(200).json({
        OK: 'Successfully .',
        data: result.data
      });
    });
   

   ///
   orderRouter.get("/completeorder", authenticateToken, async (req, res) => {
  try {
    const { user_id } = req.user;

    const { data: orderdetailData, error } = await supabase
      .from("orderdetails")
      .select(
        `
          order_detail_id,
          orders (
            order_id,
            user_id
          ),
          service_lists,
          service_id,
          status,
          order_date,
          time,
          quantity_per_order,
          total_amount
          ,technician_name,
          technician_id,
          order_code
        `
      )
      .eq("orders.user_id", user_id)
      .in("status", ["ดำเนินการสำเร็จ"]);

    // console.log("user_id", user_id);
    // console.log("orderdetailData", orderdetailData);

    if (error || !orderdetailData) {
      return res.status(404).json({ error: "ไม่พบข้อมูลผู้ใช้งาน" });
    }

    res.json({ data: orderdetailData });
  } catch (error) {
    console.error("Error in GET /customer:", error);
    res.status(500).json({ error: "เกิดข้อผิดพลาดในการดึงข้อมูลผู้ใช้งาน" });
  }
});